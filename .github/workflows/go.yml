name: Go

on:
  push:
    branches: [ main ]
    paths:
      - '**.go'
      - 'go.mod'
  pull_request:
    paths:
      - '**.go'
      - 'go.mod'
      - '.github/workflows/go.yml'

env:
  GOPROXY: "https://proxy.golang.org"
  DATABASE_PASSWORD: "${{ secrets.DATABASEPASSWORD }}"
  CODECOV_TOKEN: "${{ secrets.CODECOV_TOKEN }}"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          args: '--timeout=30m'

  test:
    name: Test
    strategy:
      matrix:
        go-version: [1.13.x, 1.14.x, 1.15.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    services:
      mysql:
        image: mysql
        env:
          MYSQL_DATABASE: mdclubgo_test
          MYSQL_USER: mdclubgo_test
          MYSQL_PASSWORD: ${{ secrets.DATABASEPASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.ROOTPASSWORD }}
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 3306:3306
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run unit tests
        run: |
          mkdir -p /tmp
          echo "[database]\nTYPE = mysql\nHOST = 127.0.0.1:3306\nNAME = mdclubgo_test\nUSER = mdclubgo_test\nPASSWORD = $DATABASE_PASSWORD\n" > /tmp/app.ini
          TEST_CONF=/tmp/app.ini go test -v -race -coverprofile=coverage -covermode=atomic ./...
      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: $CODECOV_TOKEN
          file: ./coverage
          flags: unittests
      - name: Cache downloaded modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
